services:
  quore-api:
    image: mustela/quore:main
    pull_policy: always
    environment:
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD}@db:5432/quore
      - REDIS_URL=redis://redis:6379/0
    env_file: ".env"
    depends_on:
      - db
      - redis
      - celery_worker
      - vaulta-api
      - custos-api

  custos-api:
    image: mustela/custos:main
    pull_policy: always
    environment:
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD}@db:5432/custos
      - REDIS_URL=redis://redis:6379/0
    env_file: ".custos.env"
    depends_on:
      - db

  vaulta-api:
    image: mustela/vaulta:main
    pull_policy: always
    environment:
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD}@db:5432/vaulta
      - REDIS_URL=redis://redis:6379/0
    env_file: ".vaulta.env"
    depends_on:
      - db

  linden-api:
    image: mustela/linden-api:main
    pull_policy: always
    environment:
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD}@db:5432/linden
      - REDIS_URL=redis://redis:6379/0
    env_file: ".linden.env"
    depends_on:
      - db

  identies-api:
    image: mustela/identies:main
    pull_policy: always
    environment:
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD}@db:5432/identies
      - REDIS_URL=redis://redis:6379/0
    env_file: ".identies.env"
    depends_on:
      - db

  github-mcp-server:
    image: mcp/github-mcp-server
    pull_policy: always
    env_file: ".github-mcp-server.env"

  estate-buddy-mcp-server:
    image: mustela/estate-buddy-mcp-server:main
    pull_policy: always
    env_file: ".env"

  celery_worker:
    image: mustela/quore:main
    pull_policy: always
    command: celery -A app.core.celery_app.celery_app worker
    environment:
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD}@db:5432/quore
      - REDIS_URL=redis://redis:6379/0
    env_file: ".env"
    depends_on:
      - db
      - redis

  flower:
    container_name: flower
    image: mher/flower
    pull_policy: always
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis

  vaulta-portal:
    image: mustela/vaulta-portal:main
    pull_policy: always
    expose:
      - "3000"
    env_file:
      - .vaulta-portal.env

  identies-portal:
    image: mustela/identies-portal:main
    pull_policy: always
    expose:
      - "3000"
    env_file:
      - .identies-portal.env

  quore-portal:
    image: mustela/quore-portal:main
    pull_policy: always
    expose:
      - "3000"
    env_file:
      - .quore-portal.env

  custos-portal:
    image: mustela/custos-portal:main
    pull_policy: always
    expose:
      - "3000"
    env_file:
      - .custos-portal.env

  linden-portal:
    image: mustela/linden-portal:main
    pull_policy: always
    expose:
      - "3000"
    env_file:
      - .linden-portal.env

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro

  db:
    image: pgvector/pgvector:pg17
    env_file: ".env"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: quore
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:8-alpine
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

volumes:
  postgres_data:
  redis_data:
