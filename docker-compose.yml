services:
  api:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/quore
      - REDIS_URL=redis://redis:6379/0
    env_file: ".env"
    depends_on:
      - db
      - redis
    volumes:
      - .:/app
    command: ./start.sh

  db:
    image: pgvector/pgvector:pg17
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: quore
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:8-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

  flower:
    container_name: flower
    image: mher/flower
    pull_policy: always
    ports:
      - "5555:5555"
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis

  grafana:
    image: grafana/grafana:12.0.0
    depends_on:
      - prometheus
      - jaeger
      - otel-collector
    ports:
      - "3002:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./dev/docker/grafana/:/etc/grafana/provisioning/
    env_file:
      - ./dev/docker/grafana/.env
  prometheus:
    image: prom/prometheus:v3.4.0
    ports:
      - "9090:9090"
    volumes:
      - ./dev/docker/prometheus/:/etc/prometheus/
      - prometheus-data:/prometheus
    command:
      - "--config.file=/etc/prometheus/config.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686" # UI
      - "14250:14250" # gRPC
    environment:
      - COLLECTOR_OTLP_ENABLED=true
  otel-collector:
    image: otel/opentelemetry-collector-contrib
    command: ["--config=/etc/otel-collector-config.yml"]
    volumes:
      - ./dev/docker/otel-collector-config.yml:/etc/otel-collector-config.yml
    environment:
      COLLECTOR_OTLP_ENABLED: true
      LOG_LEVEL: debug
    ports:
      - 4317:4317 # OTLP gRPC receiver
      - 4318:4318 # OTLP http receiver
      - 8889:8889 # Prometheus exporter metrics
    depends_on:
      - prometheus
      - jaeger

volumes:
  postgres_data:
  redis_data:
  prometheus-data: {}
  grafana-data: {}
